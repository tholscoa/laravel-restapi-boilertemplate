## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/auth
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/user/register
    metadata:
      title: 'User registration endpoint'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: porro
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: delbert86@example.org
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: non
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/user/profile/{id}'
    metadata:
      title: 'Endpoint to show authenticated user profile.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the profile.'
        required: true
        example: aut
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/user/permissions
    metadata:
      title: 'Endpoint to get all available permissions'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/user/permissions/self
    metadata:
      title: 'Endpoint to get authenticated user permissions'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/user/permissions/{action}'
    metadata:
      title: |-
        Assign new permission to user
        action only allows assign or revoke
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      action:
        name: action
        description: ''
        required: true
        example: asperiores
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "status": true,
          "message": "Permission(s) successfully revoked",
          "data": [
             {
                 "id": 1,
                 "name": "create-permissions",
                 "guard_name": "api",
                 "created_at": "2022-04-08T17:40:17.000000Z",
                 "updated_at": "2022-04-08T17:40:17.000000Z",
                 "pivot": {
                     "model_id": 1,
                     "permission_id": 1,
                     "model_type": "App\\Models\\User"
                 }
             },
             {
                 "id": 9,
                 "name": "super-admin",
                 "guard_name": "web",
                 "created_at": "2022-04-08T18:18:45.000000Z",
                 "updated_at": "2022-04-08T18:18:45.000000Z",
                 "pivot": {
                     "model_id": 1,
                     "permission_id": 9,
                     "model_type": "App\\Models\\User"
                 }
             }
          ]
          }
        headers: []
        description: '200'
    responseFields: []
